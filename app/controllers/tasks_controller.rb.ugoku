# coding: utf-8
require 'csv'

class TasksController < ApplicationController
  # before_filter :retrieve_user
  before_filter :retrieve_user
  before_filter :find_task, only: [:show, :edit, :update, :destroy]

  def index
    # @name = params[:name]
    # @tasks = Task.like_name(@name).all
    # binding.pry # ブレークポイントを設定
    @tasks = @user.tasks
    unless params[:tag].blank?
      @tasks = @tasks.includes(:tags).where(:tags => {:name => params[:tag]})
    end
  end
  def new
    # @task = Task.new
    @task = @user.tasks.build
  end
  def edit
    @task = Task.find(params[:id])
  end
  def create
    @task = @user.tasks.build(params[:task]) 
    # @task = Task.new(params[:task])
    if @task.save
      redirect_to user_tasks_url(@user) 
    else
      render :action => :new
    end
  end
  def update
    @task = Task.find(params[:id])
    if @task.update_attributes(params[:task])
      redirect_to user_tasks_url(@user) 
    else
      render :action => :edit
    end
  end
  def destroy
    @task = Task.find(params[:id])
    @task.destroy
    redirect_to user_tasks_url(@user) 
  end
  def download
    @tasks = @user.tasks
    csvs = CSV.generate do |csv|
      @tasks.each do |task|
        csv << [task.name,
                task.deadline.strftime( "%Y-%m-%d %H:%M:%S"),
                task.priority]
      end
    end
    send_data csvs, :type => "text/csv", :filename => "task.csv"
  end
  def show
  end
  private
  def retrieve_user
    # binding.pry # ブレークポイントを設定
    unless @user = User.where(:id => params[:user_id]).first and
           (@login_user.adm? or @login_user.id == @user.id)
      redirect_to user_path(@login_user)
    end
  end
  def find_task
    # binding.pry # ブレークポイントを設定
    @task = @user.tasks.find(params[:id])
  end 

end
